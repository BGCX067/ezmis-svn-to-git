<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.5.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd"
	default-autowire="byName" default-lazy-init="true">
	
	
	<!-- spring 2.5.6新的配置方式 -->
	<context:property-placeholder location="classpath:config.properties"/>

	<!--全局配置,class目录下config.properties

	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:config.properties" />
	</bean>
		-->

	
	<!-- 以AspectJ方式 定义 AOP -->
	<aop:config proxy-target-class="true">
		<aop:advisor pointcut="execution(* com.jteap..*Action.*(..))" advice-ref="txAdvice"/>
	</aop:config>

	<!-- 以AspectJ方式 定义 Action拦截器,用于记录日志-->
	<bean id="logAdvice" class="com.jteap.system.log.aop.LogAdvice"/>
	<aop:config>
		<aop:aspect ref = "logAdvice">
			<aop:after-throwing pointcut="execution(* com.jteap..*Action.*(..))" throwing="ex" method="saveException"/>
			<!-- 			<aop:after pointcut="execution(* com.jteap..*Action.*(..))"   method="saveLoginAndLogic"/> -->
			<aop:around pointcut="execution(* com.jteap..*Action.*(..))" method="saveLoginAndLogic"/>
		</aop:aspect>
	</aop:config>
	
	<!-- 基本事务定义,使用transactionManager作事务管理,默认get*方法的事务为readonly,其余方法按默认设置.
			 默认的设置请参考Spring文档事务一章. --> 
	<tx:advice id="txAdvice">
		<tx:attributes>
			<tx:method name="get*" read-only="true"  propagation="REQUIRED" /> 
			<tx:method name="load*" read-only="true" propagation="REQUIRED" /> 
			<tx:method name="find*" read-only="true" propagation="REQUIRED" /> 
			<tx:method name="*" propagation="REQUIRED" /> 

		</tx:attributes>
	</tx:advice>

 </beans>